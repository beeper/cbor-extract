name: Prebuild
on: [push]
jobs:
  build-test-macos:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v3
      - run: corepack enable
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
      - run: yarn install --mode=skip-build
      - run: yarn test
      - run: yarn run prebuild-macos
        if: startsWith(github.ref, 'refs/tags/')
      - run: yarn run prebuild-macos
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PREBUILD_ARCH: arm64
      - run: tar --create --format ustar --verbose --file=prebuild-darwin.tar -C prebuilds .
        if: startsWith(github.ref, 'refs/tags/')
      - name: Prebuild
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: prebuild-darwin.tar
  build-test-win32:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, windows-11-arm]
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          # this will always attempt to use yarn 1
          # cache: yarn
      - run: corepack enable
      # skip the build so we don't die if prebuilts don't already exist (that's
      # why we're building them)
      - run: yarn install --mode=skip-build
      - run: yarn run prebuild-win32
      - run: tar --create --verbose --file=prebuild-win32.tar -C prebuilds .
        if: runner.arch == 'X64'
      - run: tar --create --verbose --file=prebuild-win32-arm.tar -C prebuilds .
        if: runner.arch == 'ARM64'
        #if: startsWith(github.ref, 'refs/tags/')
      - name: Prebuild
        uses: softprops/action-gh-release@v1
        if: runner.arch == 'X64' && startsWith(github.ref, 'refs/tags/')
        with:
          files: prebuild-win32.tar
      - run: npm i -g node-gyp
        if: runner.arch == 'ARM64'
      - name: Prebuild
        uses: softprops/action-gh-release@v1
        if: runner.arch == 'ARM64' && startsWith(github.ref, 'refs/tags/')
        with:
          files: prebuild-win32-arm.tar
  # TODO: re-add linux x86-64; prev. build was using centos 7 which is EOL
  build-linux-arm:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf g++-aarch64-linux-gnu g++-arm-linux-gnueabihf
      - run: ldd --version ldd
      - uses: actions/checkout@v3
      - run: corepack enable
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
      - run: yarn install --mode=skip-build
      - run: yarn run prebuild-libc
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PREBUILD_ARCH: arm64
          CC: aarch64-linux-gnu-gcc
          CXX: aarch64-linux-gnu-g++
      - run: yarn run prebuild-libc
        env:
          PREBUILD_ARCH: arm
          PREBUILD_ARMV: 7
          CC: arm-linux-gnueabihf-gcc
          CXX: arm-linux-gnueabihf-g++
      - run: tar --create --verbose --file=prebuild-linux-arm.tar -C prebuilds .
      - name: Prebuild
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: prebuild-linux-arm.tar
