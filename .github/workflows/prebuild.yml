name: Prebuild
on: [push]
jobs:
  build-test-macos:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: python3 -m pip install setuptools
      - run: npm install
      - run: npm test
      - run: npm run prebuild-macos
        if: startsWith(github.ref, 'refs/tags/')
      - run: npm run prebuild-macos
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PREBUILD_ARCH: arm64
      - run: tar --create --format ustar --verbose --file=prebuild-darwin.tar -C prebuilds .
        if: startsWith(github.ref, 'refs/tags/')
      - name: Prebuild
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: prebuild-darwin.tar
  build-test-win32:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, windows-11-arm]
        include:
          - os: windows-latest
            node-version: 16
          #https://nodejs.org/en/blog/announcements/v20-release-announce#official-support-for-arm64-windows
          - os: windows-11-arm
            node-version: 20
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run prebuild-win32
      - run: tar --create --verbose --file=prebuild-win32.tar -C prebuilds .
        if: runner.arch == 'X64'
      - run: tar --create --verbose --file=prebuild-win32-arm.tar -C prebuilds .
        if: runner.arch == 'ARM64'
        #if: startsWith(github.ref, 'refs/tags/')
      - name: Prebuild
        uses: softprops/action-gh-release@v1
        if: runner.arch == 'X64' && startsWith(github.ref, 'refs/tags/')
        with:
          files: prebuild-win32.tar
      - run: npm i -g node-gyp
        if: runner.arch == 'ARM64'
      - name: Prebuild
        uses: softprops/action-gh-release@v1
        if: runner.arch == 'ARM64' && startsWith(github.ref, 'refs/tags/')
        with:
          files: prebuild-win32-arm.tar
  build-centos-7:
    #if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      #- run: ldd --version ldd
      #- uses: actions/checkout@v3
      #  with:
      #    repository: 'kriszyp/musl-bins'
      #- run: tar -xf aarch64-linux-musl-cross.tgz && pwd && ls
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - run: curl https://raw.githubusercontent.com/kriszyp/musl-bins/main/aarch64-linux-musl-cross.tgz --output aarch64-linux-musl-cross.tgz
      - run: tar -xf aarch64-linux-musl-cross.tgz && pwd && ls
      - run: curl https://raw.githubusercontent.com/kriszyp/musl-bins/main/armv7l-linux-musleabihf-cross.tgz --output armv7l-linux-musleabihf-cross.tgz
      - run: tar -xf armv7l-linux-musleabihf-cross.tgz && pwd && ls
      - run: curl https://raw.githubusercontent.com/kriszyp/musl-bins/main/x86_64-linux-musl-native.tgz --output x86_64-linux-musl-native.tgz
      - run: tar -xf x86_64-linux-musl-native.tgz && pwd && ls
      - run: npm install
      - run: npm run prebuild-libc
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PREBUILD_LIBC: musl
          PREBUILD_ARCH: arm64
          CC: ${PWD}/aarch64-linux-musl-cross/bin/aarch64-linux-musl-gcc
          CXX: ${PWD}/aarch64-linux-musl-cross/bin/aarch64-linux-musl-g++
      - run: npm run prebuild-libc
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PREBUILD_LIBC: musl
          PREBUILD_ARCH: arm
          PREBUILD_ARMV: 7
          CC: ${PWD}/armv7l-linux-musleabihf-cross/bin/armv7l-linux-musleabihf-gcc
          CXX: ${PWD}/armv7l-linux-musleabihf-cross/bin/armv7l-linux-musleabihf-g++
      - run: npm run prebuild-libc
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PREBUILD_LIBC: musl
          PREBUILD_ARCH: x64
          CC: ${PWD}/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc
          CXX: ${PWD}/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++
      - run: npm run prebuild-libc
      - run: npm test
      - run: tar --create --verbose --file=prebuild-linux.tar -C prebuilds .
      - name: Prebuild
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: prebuild-linux.tar
  build-linux-arm:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    #container: quay.io/pypa/manylinux_2_24_x86_64
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf g++-aarch64-linux-gnu g++-arm-linux-gnueabihf
      - run: ldd --version ldd
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install
      - run: npm run prebuild-libc
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PREBUILD_ARCH: arm64
          CC: aarch64-linux-gnu-gcc
          CXX: aarch64-linux-gnu-g++
      - run: npm run prebuild-libc
        env:
          PREBUILD_ARCH: arm
          PREBUILD_ARMV: 7
          CC: arm-linux-gnueabihf-gcc
          CXX: arm-linux-gnueabihf-g++
      - run: tar --create --verbose --file=prebuild-linux-arm.tar -C prebuilds .
      - name: Prebuild
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: prebuild-linux-arm.tar
